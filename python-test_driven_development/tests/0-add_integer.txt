doctest for 0-add_integer.py
============================

``add_integer()`` should always give me a clean integer result ðŸš€

>>> add_integer = __import__('0-add_integer').add_integer

basic integer additions
>>> add_integer(1, 2)
3
>>> add_integer(-2, -3)
-5
>>> add_integer(-1, 5)
4

default argument
>>> add_integer(2)
100

with floats (truncated to int)
>>> add_integer(5.61, 2.3)
7
>>> add_integer(9, 1.9247)
10

large integers
>>> add_integer(4294967296, 1)
4294967297

ERROR TEST CONDITIONS
=====================

wrong types
>>> add_integer("9", 1)
Traceback (most recent call last):
TypeError: a must be an integer
>>> add_integer(7, "8")
Traceback (most recent call last):
TypeError: b must be an integer
>>> add_integer(True, 1)
Traceback (most recent call last):
TypeError: a must be an integer

special floats
>>> add_integer(float("NaN"), 1)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
>>> add_integer(float("inf"))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
