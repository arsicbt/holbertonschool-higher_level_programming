>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# normal division
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# division by a float
>>> matrix_divided([[2.5, 5.0], [7.5, 10.0]], 2.5)
[[1.0, 2.0], [3.0, 4.0]]

# empty matrix or empty row
>>> matrix_divided([], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# non-number element
>>> matrix_divided([[1, "2"], [3, 4]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# unequal row lengths
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# div is not a number
>>> matrix_divided([[1, 2], [3, 4]], "2")
Traceback (most recent call last):
TypeError: div must be a number

# division by zero
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
